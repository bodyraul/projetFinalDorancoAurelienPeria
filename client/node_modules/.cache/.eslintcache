[{"C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\index.js":"1","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\App.js":"2","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\Context\\AuthContext.js":"3","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\Component\\Navbar.jsx":"4","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Post\\CreerPost.js":"5","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Post\\ModifPost.js":"6","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Post\\Post.jsx":"7","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\SignalementMessage.jsx":"8","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\Admin.jsx":"9","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\SignalementPost.jsx":"10","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\DetailsSignalementMsg.jsx":"11","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\DetailsSignalementPost.jsx":"12","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Accueil\\Accueil.jsx":"13","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Inscription\\Inscription.jsx":"14","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Connexion\\Connexion.jsx":"15","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\forum\\AccueilForum.js":"16","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\messagePost\\MessagesDesPost.js":"17"},{"size":447,"mtime":1665663018644,"results":"18","hashOfConfig":"19"},{"size":2368,"mtime":1666802857076,"results":"20","hashOfConfig":"19"},{"size":85,"mtime":1665703835443,"results":"21","hashOfConfig":"19"},{"size":1524,"mtime":1666977807684,"results":"22","hashOfConfig":"19"},{"size":9682,"mtime":1666474880551,"results":"23","hashOfConfig":"19"},{"size":5397,"mtime":1666359258000,"results":"24","hashOfConfig":"19"},{"size":1394,"mtime":1666318456627,"results":"25","hashOfConfig":"19"},{"size":1577,"mtime":1666221363357,"results":"26","hashOfConfig":"19"},{"size":2343,"mtime":1666152676058,"results":"27","hashOfConfig":"19"},{"size":1755,"mtime":1666226796126,"results":"28","hashOfConfig":"19"},{"size":5809,"mtime":1666230293105,"results":"29","hashOfConfig":"19"},{"size":5810,"mtime":1666230233609,"results":"30","hashOfConfig":"19"},{"size":126,"mtime":1665666526311,"results":"31","hashOfConfig":"19"},{"size":1436,"mtime":1665681236098,"results":"32","hashOfConfig":"19"},{"size":1195,"mtime":1666929726239,"results":"33","hashOfConfig":"19"},{"size":11449,"mtime":1666966740816,"results":"34","hashOfConfig":"19"},{"size":9698,"mtime":1666985254016,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1tysztg",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"39"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"39"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\index.js",[],[],[],"C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\App.js",[],[],"C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\Context\\AuthContext.js",[],[],"C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\Component\\Navbar.jsx",[],[],[],"C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Post\\CreerPost.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],[],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./creerPost.css\";\r\n\r\nexport default function CreerPost() {\r\n  const [titrePost, settitrePost] = useState(\"\");\r\n  const [MsgPost, setMsgPost] = useState(\"\");\r\n  const {token,settoken}  = useContext(AuthContext);\r\n  const [errorTitreVide, seterrorTitreVide] = useState(\"Le titre ne peux pas être vide.\");\r\n  const [errorTitreNbCaractere, seterrorTitreNbCaractere] = useState(\"nombre de caractères insuffisants\");\r\n  const [errorMsgVide, seterrorMsgVide] = useState(\"Le message ne peut pas être vide\");\r\n  const [errorMsgNbCaractere, seterrorMsgNbCaractere] = useState(\"nombre de caractères insuffisants\");\r\n  const [nbCaractereMsg, setnbCaractereMsg] = useState(MsgPost.length);\r\n  const [nbCaractereTitre, setnbCaractereTitre] = useState(titrePost.length);\r\n  const [post, setpost] = useState({});\r\n  const [listePost, setlistePost] = useState([]);\r\n  const [boolSupPost, setboolSupPost] = useState(false);\r\n  const [messageAnnonce, setmessageAnnonce] = useState([]);\r\n  const [msgMessage, setmsgMessage] = useState(\"\");\r\n  const [nb, setnb] = useState(0);\r\n  const navigate = useNavigate();\r\n \r\n  \r\n  // récupération de nos propres post au chargement de la page\r\n  useEffect(() => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    axios.get(\"/post/accesPost\",config)\r\n    .then((res)=>{\r\n      setlistePost(res.data);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n    axios.get(\"/message/afficherAllMessage\")\r\n    .then((res)=>{\r\n      setmessageAnnonce(res.data);\r\n    })\r\n    .catch((error)=>console.log(error));\r\n\r\n  }, [])\r\n  \r\n\r\n  // gestion du input titre du form créér post\r\n  useEffect(() => {\r\n    const button = document.getElementById(\"creer\");\r\n    setnbCaractereTitre(titrePost.length);\r\n    \r\n    if(titrePost === \"\" )\r\n      {\r\n        seterrorTitreVide(\"Le titre ne peux pas être vide.\");\r\n        button.disabled=true;\r\n      }\r\n    if(titrePost.length<5 )\r\n      {\r\n        seterrorTitreNbCaractere(\"nombre de caractères insuffisants\");\r\n        button.disabled=true;\r\n      }\r\n    if(titrePost.length>30 )\r\n      {\r\n        seterrorTitreNbCaractere(\"nombre de caractères trop important\");\r\n        button.disabled=true;\r\n      }\r\n    if(titrePost.length>=5 && titrePost.length<=30 )\r\n      {\r\n        seterrorTitreNbCaractere(\"\");\r\n      }\r\n    if(titrePost!=\"\"){\r\n      seterrorTitreVide(\"\");\r\n    }\r\n    if(MsgPost!=\"\" &&  MsgPost.length>=20 && MsgPost.length<=300 && titrePost!=\"\" && titrePost.length>=5 && titrePost.length<=30){\r\n      button.disabled=false;\r\n    }\r\n  }, [titrePost])\r\n\r\n\r\n   // gestion du input msg du form créér post\r\n  useEffect(() => {\r\n    const button = document.getElementById(\"creer\");\r\n    setnbCaractereMsg(MsgPost.length);\r\n    \r\n    if(MsgPost === \"\" )\r\n      {\r\n        seterrorMsgVide(\"Le message ne peux pas être vide.\");\r\n        button.disabled=true;\r\n      }\r\n    if(MsgPost.length<20 )\r\n      {\r\n        seterrorMsgNbCaractere(\"nombre de caractères insuffisants\");\r\n        button.disabled=true;\r\n      }\r\n    if(MsgPost.length>300 )\r\n      {\r\n        seterrorMsgNbCaractere(\"nombre de caractères trop important\");\r\n        button.disabled=true;\r\n      }\r\n    if(MsgPost.length>=20 && MsgPost.length<=300 )\r\n      {\r\n        seterrorMsgNbCaractere(\"\");\r\n      }\r\n    if(MsgPost!=\"\"){\r\n      seterrorMsgVide(\"\");\r\n    }\r\n    if(MsgPost!=\"\" &&  MsgPost.length>=20 && MsgPost.length<=300 && titrePost!=\"\" && titrePost.length>=5 && titrePost.length<=30){\r\n      button.disabled=false;\r\n    }\r\n  }, [MsgPost])\r\n\r\n\r\n  // requette qui permet de créer un post\r\n  const creerPost = () =>{\r\n    post.titre = titrePost;\r\n    post.description = MsgPost;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios.post(\"/post/creerPost\",post,config)\r\n    .then((res)=>{\r\n      setlistePost([res.data,...listePost]);\r\n    })\r\n    .catch((err)=>console.log(err))\r\n    setMsgPost(\"\");\r\n    settitrePost(\"\");\r\n  }\r\n\r\n  // on récupère l'id du stop que l'on veut sup et on a l'emplacement de cet id dans la liste poste\r\n const supPost =(e)=>{\r\n    console.log(e);\r\n    for(let k=0;k<=listePost.length-1;k++){\r\n      if(listePost[k]._id === e){\r\n        setboolSupPost(true);\r\n        setnb(k);\r\n        return ;\r\n      }\r\n    }\r\n }\r\n\r\n //requete efféctué après avoir valider la supréssion du post\r\n const validationSupPost = (idPost)=>{\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n    axios.delete(`/post/supprimerPost/${idPost}`,config)\r\n    .then((res)=>console.log(res))\r\n    .catch((err)=>console.log(err));\r\n\r\n    setlistePost(listePost.filter(element=>element._id != idPost));\r\n    setnb(0);\r\n    setboolSupPost(false);\r\n }\r\n\r\n // ce qu'il se passe après avoir changer d'avis sur la suppréssion du post\r\n const nonSupPost = ()=>{\r\n  setboolSupPost(false);\r\n  setnb(0);\r\n }\r\n\r\n //requete accès page modif post\r\n const pageModifPost = (idPost)=>{\r\n  navigate(`/post/modifPost/${idPost}`);\r\n }\r\n\r\n //requete qui permet de créér un message et de mettre à jour le post\r\n const creerMessage = (idPost)=>{\r\n    console.log(idPost);\r\n    console.log(msgMessage);\r\n\r\n    const config ={\r\n      headers:{\r\n        Authorization : `BEARER ${token}`,\r\n      },\r\n    }\r\n\r\n    var message = {};\r\n    message.contenu = msgMessage;\r\n    axios.post(`/message/creerMessage/${idPost}`,message,config)\r\n    .then((res)=> setmessageAnnonce([res.data,...messageAnnonce]))\r\n    .catch((err)=>console.log(err));\r\n\r\n   \r\n    \r\n }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1 className='titre1'>Créér un post</h1>\r\n        <div className='formCreerPost'>\r\n          <div className='formPostPartieTitre'>\r\n              <div className='partieSaisieTitre'>\r\n                <p>\r\n                  <textarea value={titrePost} onChange={(e)=>settitrePost(e.target.value)} type=\"text\" placeholder=\"Saisir titre\"/>\r\n                </p>\r\n                <p>\r\n                 {nbCaractereTitre === 0 ? <span> {nbCaractereTitre} caractère (min : 5  max : 30)</span> : <span> {nbCaractereTitre} caractères(min : 5  max : 30)</span>}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <span>{errorTitreVide}</span>\r\n              </div>\r\n              <div>\r\n                <span>{errorTitreNbCaractere}</span>\r\n              </div>\r\n          </div>\r\n          <div className='FormPartieSaisieMessage'>\r\n              <div className='partieSaisieMessage'>\r\n                <p>\r\n                  <textarea value={MsgPost} onChange={(e)=>setMsgPost(e.target.value)} type=\"text\" placeholder=\"Saisir message\"/>\r\n                </p>\r\n                <p>\r\n                  {nbCaractereMsg === 0? <span> {nbCaractereMsg} caractère (min : 20  max : 300)</span> : <label> {nbCaractereMsg} caractères(min : 20  max : 300)</label>}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p>\r\n                  <span>{errorMsgVide}</span>\r\n                </p>\r\n                <p>\r\n                  <span>{errorMsgNbCaractere}</span>\r\n                </p>\r\n              </div>\r\n          </div>\r\n          <button className='btnValiderFormPost' onClick={creerPost}  id='creer'>Créér</button>\r\n        </div>\r\n\r\n        <h1 className='titre1'>Mes posts</h1>\r\n        \r\n\r\n        {listePost.map((element)=>{\r\n          return(\r\n            <div key={element._id} className='contenuPost'>\r\n              <div className='ententePost'>\r\n                  <p>\r\n                      <span>Créé le {element.createdAt}</span>\r\n                      <span>par {element.nomCreateur} {element.prenomCreateur}</span>\r\n                      <span>Allis {element.pseudoCreateur}</span>\r\n                  </p>\r\n                  <p>\r\n                      {element.titre} \r\n                  </p>\r\n              </div>\r\n              <div className='corpsPost'>\r\n                  <div className='partieAffchageDuMsg'>\r\n                    {messageAnnonce.map((message)=>{\r\n                      if(message.idPost === element._id){\r\n                        return(\r\n                          <div key={message._id} className='corpsPost2'>\r\n                             <div className='afficherInfoMsgg'>   \r\n                                <p>\r\n                                  <span>Message créé le {message.createdAt}</span>\r\n                                </p>\r\n                                <p>\r\n                                  <span>Par  {message.nomCreateurMessage} {message.prenomCreateurMessage}</span>\r\n                                </p>\r\n                                <p>\r\n                                  <span>Allias {message.pseudoCreateurMessage}</span>\r\n                                </p>                            \r\n                             </div>\r\n                              <div className='afficherMssg'>\r\n                                  {message.contenu}\r\n                              </div>\r\n                          </div>\r\n                        )\r\n                      }\r\n\r\n                    })}\r\n                      \r\n                  </div>\r\n                  <div className='PartieSaisirNewMsg'>\r\n                      <textarea></textarea>\r\n                  </div>\r\n              </div> \r\n            </div>\r\n            )\r\n        })}     \r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Post\\ModifPost.js",["120","121","122","123","124","125","126","127","128","129"],[],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function ModifPost() {\r\n\r\n    const idPost = useParams().id;\r\n    const [titrePost, settitrePost] = useState(\"\");\r\n    const [MsgPost, setMsgPost] = useState(\"\");\r\n    const {token,settoken}  = useContext(AuthContext);\r\n    const [errorTitreVide, seterrorTitreVide] = useState(\"Le titre ne peux pas être vide.\");\r\n    const [errorTitreNbCaractere, seterrorTitreNbCaractere] = useState(\"nombre de caractères insuffisants\");\r\n    const [errorMsgVide, seterrorMsgVide] = useState(\"Le message ne peut pas être vide\");\r\n    const [errorMsgNbCaractere, seterrorMsgNbCaractere] = useState(\"nombre de caractères insuffisants\");\r\n    const [nbCaractereMsg, setnbCaractereMsg] = useState(MsgPost.length);\r\n    const [nbCaractereTitre, setnbCaractereTitre] = useState(titrePost.length);\r\n    const [msgModif, setmsgModif] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n     \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n\r\n      axios.get(`/post/monPoste/${idPost}`,config)\r\n      .then((res)=>{\r\n        setMsgPost(res.data.description);\r\n        settitrePost(res.data.titre);\r\n        console.log(res);\r\n      })\r\n      .catch((err)=>console.log(err));\r\n\r\n    }, [])\r\n\r\n    // gestion du input titre du form créér post\r\n  useEffect(() => {\r\n    const button = document.getElementById(\"modifier\");\r\n    setnbCaractereTitre(titrePost.length);\r\n    \r\n    if(titrePost === \"\" )\r\n      {\r\n        seterrorTitreVide(\"Le titre ne peux pas être vide.\");\r\n        button.disabled=true;\r\n      }\r\n    if(titrePost.length<5 )\r\n      {\r\n        seterrorTitreNbCaractere(\"nombre de caractères insuffisants\");\r\n        button.disabled=true;\r\n      }\r\n    if(titrePost.length>30 )\r\n      {\r\n        seterrorTitreNbCaractere(\"nombre de caractères trop important\");\r\n        button.disabled=true;\r\n      }\r\n    if(titrePost.length>=5 && titrePost.length<=30 )\r\n      {\r\n        seterrorTitreNbCaractere(\"\");\r\n      }\r\n    if(titrePost!=\"\"){\r\n      seterrorTitreVide(\"\");\r\n    }\r\n    if(MsgPost!=\"\" &&  MsgPost.length>=20 && MsgPost.length<=300 && titrePost!=\"\" && titrePost.length>=5 && titrePost.length<=30){\r\n      button.disabled=false;\r\n    }\r\n  }, [titrePost])\r\n\r\n\r\n   // gestion du input msg du form créér post\r\n  useEffect(() => {\r\n    const button = document.getElementById(\"modifier\");\r\n    setnbCaractereMsg(MsgPost.length);\r\n    \r\n    if(MsgPost === \"\" )\r\n      {\r\n        seterrorMsgVide(\"Le titre ne peux pas être vide.\");\r\n        button.disabled=true;\r\n      }\r\n    if(MsgPost.length<20 )\r\n      {\r\n        seterrorMsgNbCaractere(\"nombre de caractères insuffisants\");\r\n        button.disabled=true;\r\n      }\r\n    if(MsgPost.length>300 )\r\n      {\r\n        seterrorMsgNbCaractere(\"nombre de caractères trop important\");\r\n        button.disabled=true;\r\n      }\r\n    if(MsgPost.length>=20 && MsgPost.length<=300 )\r\n      {\r\n        seterrorMsgNbCaractere(\"\");\r\n      }\r\n    if(MsgPost!=\"\"){\r\n      seterrorMsgVide(\"\");\r\n    }\r\n    if(MsgPost!=\"\" &&  MsgPost.length>=20 && MsgPost.length<=300 && titrePost!=\"\" && titrePost.length>=5 && titrePost.length<=30){\r\n      button.disabled=false;\r\n    }\r\n  }, [MsgPost])\r\n\r\n  //requete qui permet de modifier le post\r\n  const modifierPost = ()=>{\r\n    const button = document.getElementById(\"modifier\");\r\n    const monPost ={};\r\n    monPost.titre = titrePost;\r\n    monPost.description = MsgPost;\r\n\r\n    const config = {\r\n        headers:{\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    }\r\n\r\n    axios.put(`/post/modifierPost/${idPost}`,monPost,config)\r\n    .then((res)=>{\r\n        console.log(res);\r\n        setmsgModif(res.data);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n    setMsgPost(\"\");\r\n    settitrePost(\"\");\r\n    button.disabled=true;\r\n\r\n    setTimeout(() => {\r\n        navigate(\"/post/creerPost\");\r\n    }, 5000);\r\n  }\r\n    \r\n\r\n  return (\r\n    <div>\r\n    <h1>Modifier mon post</h1>\r\n    <div>\r\n      <p>\r\n        <label>titre : </label>\r\n        <input value={titrePost} onChange={(e)=>settitrePost(e.target.value)} type=\"text\" placeholder=\"titre\"/>\r\n        {nbCaractereTitre === 0 ? <label> {nbCaractereTitre} caractère (min : 5  max : 30)</label> : <label> {nbCaractereTitre} caractères(min : 5  max : 30)</label>}\r\n      </p>\r\n      <p>\r\n        <span>{errorTitreVide}</span>\r\n      </p>\r\n      <p>\r\n        <span>{errorTitreNbCaractere}</span>\r\n      </p>\r\n      <p>\r\n        <label>premier message : </label>\r\n        <input value={MsgPost} onChange={(e)=>setMsgPost(e.target.value)} type=\"text\" placeholder=\"message\"/>\r\n        {nbCaractereMsg === 0? <label> {nbCaractereMsg} caractère (min : 20  max : 300)</label> : <label> {nbCaractereMsg} caractères(min : 20  max : 300)</label>}\r\n      </p>\r\n      <p>\r\n        <span>{errorMsgVide}</span>\r\n      </p>\r\n      <p>\r\n        <span>{errorMsgNbCaractere}</span>\r\n      </p>\r\n      <button onClick={modifierPost}  id='modifier'>Modifier</button>\r\n    </div>\r\n    <p>\r\n        <span>{msgModif}</span>\r\n    </p>\r\n    \r\n</div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Post\\Post.jsx",["130"],[],"import React from 'react'\r\nimport axios from \"axios\";\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function Post() {\r\n\r\n  const [posts, setposts] = useState([]);\r\n  const [messageAnnonce, setmessageAnnonce] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n   \r\n     axios.get(\"/post\")\r\n    .then((res)=>{\r\n      setposts(res.data);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n    axios.get(\"/message/afficherAllMessage\")\r\n    .then((res)=>{\r\n      setmessageAnnonce(res.data);\r\n    })\r\n    .catch((error)=>console.log(error));\r\n\r\n  }, [])\r\n  \r\n  if (!posts.length){\r\n    return(\r\n      <div>\r\n          Aucun post de disponible\r\n      </div>\r\n    )\r\n  }else{\r\n     return(\r\n      <div>\r\n          {posts.map((post)=>{\r\n            return(\r\n              <div style={{marginTop:50}} key={post._id}>\r\n                  <p>{post.titre}</p>\r\n                  <p>{post.createdAt}</p>\r\n                  <p>créer par {post.nomCreateur} {post.prenomCreateur} allias {post.pseudoCreateur}</p>\r\n                  {messageAnnonce.map((message)=>{\r\n                    if(message.idPost === post._id){\r\n                      return(\r\n                        <p key={message._id}>{message.contenu}</p>\r\n                      )\r\n                    }\r\n\r\n                  })}\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n     )\r\n  }\r\n}\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\SignalementMessage.jsx",["131","132","133"],[],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport { useContext } from 'react';\r\nimport {AuthContext} from \"../../Context/AuthContext\";\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function SignalementMessage() {\r\n  const {token,settoken}  = useContext(AuthContext);\r\n  const [allSignalMsg, setallSignalMsg] = useState([]);\r\n  const [errorMsg, seterrorMsg] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect( () => {\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios.get(\"/signalement/afficherMsgSignaler\",config)\r\n    .then((res)=>{setallSignalMsg(res.data);\r\n      \r\n    })\r\n    .catch((err)=>seterrorMsg(err.response.data))\r\n\r\n  }, [])\r\n\r\n  \r\n  \r\n  const redirectPageDetail = (e)=>{\r\n    navigate(`/admin/signalementMessage/details/${e}`);\r\n  }\r\n\r\n  if(allSignalMsg.length!=0){\r\n    return (\r\n      allSignalMsg.map((element)=>{\r\n        return(\r\n          <p key={element._id}>\r\n              <span>pseudo : {element.pseudoCreateurMessage} </span>\r\n              <span>nom : {element.nomCreateurMessage } </span>\r\n              <span>prenom : {element.prenomCreateurMessage} </span>\r\n              <span>contenu : {element.contenu} </span>\r\n              <button onClick={()=>redirectPageDetail(element._id)}>detail signalement</button>\r\n             \r\n          </p>\r\n        )\r\n        \r\n      })\r\n    )\r\n  }\r\n  if(allSignalMsg.length===0)\r\n  return (\r\n    <p>{errorMsg}</p>\r\n  )\r\n}\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\Admin.jsx",["134","135","136"],[],"import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useContext } from 'react';\r\nimport {AuthContext} from \"../../Context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Admin() {\r\n\r\n  const {token,settoken}  = useContext(AuthContext);\r\n  const [admin, setadmin] = useState(false);\r\n  const [nonAdmin, setnonAdmin] = useState(\"\");\r\n  const [nombreSignalMsg, setnombreSignalMsg] = useState(\"\");\r\n  const [nombreSignalPost, setnombreSignalPost] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios.get(\"/admin\",config)\r\n    .then((res)=>{\r\n      if(res.data != 'admin'){\r\n        return setnonAdmin(\"vous n'avez pas l'autorisation d'acceder à cette page.\")\r\n      }\r\n      setadmin(true);\r\n    \r\n    })\r\n    .catch((err)=>setnonAdmin(err.response.data));\r\n    \r\n    axios.get(\"signalement/nombreMessageSignaler\",config)\r\n    .then((res)=>setnombreSignalMsg(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    axios.get(\"signalement/nombrePostSignaler\",config)\r\n    .then((res)=>setnombreSignalPost(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n  }, [])\r\n  \r\n  if(admin){\r\n    return (\r\n      <div >\r\n              <Link to={\"/admin/signalementPost\"}>nombre signalements post : {nombreSignalPost} </Link>\r\n              <Link to={\"/admin/signalementMessage\"}>nombre signalements message :{nombreSignalMsg} </Link>\r\n            \r\n            <p>\r\n              Bienvenue sur la page d'admin. Vous pouvez faire une recherche de Post pour modifier ou supprimer ceux qui vous paraissent inapropriés.Vous pouvez également accéder aux signalements,\r\n              que ce soit pour un post ou un message non conforme. Vous pouvez agir en conséquence en ayant la possibilité d'envoyer un message d'alerte à l'utilisateur ou de le bannir.\r\n              S'il est bannis, l'utilisateur ne pourra alors plus se connecter et ne pourra donc ni créer de post ni de message.Il pourra cependant accéder à la page d'accueil et voir les messages et posts créés.\r\n             </p>\r\n      </div>\r\n    )\r\n  }\r\n    if(!admin){\r\n      return(\r\n          <div>\r\n              {nonAdmin}\r\n          </div>\r\n        )\r\n    \r\n  }\r\n}\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\SignalementPost.jsx",["137","138","139"],[],"  import React from 'react'\r\n  import axios from 'axios'\r\n  import { useEffect } from 'react'\r\n  import { useContext } from 'react';\r\n  import {AuthContext} from \"../../Context/AuthContext\";\r\n  import { useState } from 'react';\r\n  import { useNavigate } from 'react-router-dom';\r\n  \r\n  export default function SignalementPost() {\r\n    const {token,settoken}  = useContext(AuthContext);\r\n    const [allSignalPost, setallSignalPost] = useState([]);\r\n    const [errorMsg, seterrorMsg] = useState(\"\");\r\n  \r\n    const navigate = useNavigate();\r\n    \r\n    useEffect( () => {\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n  \r\n      axios.get(\"/signalement/afficherPostSignaler\",config)\r\n      .then((res)=>{setallSignalPost(res.data);\r\n        console.log(res);\r\n      })\r\n      .catch((err)=>seterrorMsg(err.response.data))\r\n  \r\n    }, [])\r\n  \r\n    \r\n    \r\n    const redirectPageDetail = (e)=>{\r\n      navigate(`/admin/signalementPost/details/${e}`);\r\n    }\r\n  \r\n    if(allSignalPost.length!=0){\r\n      return (\r\n        allSignalPost.map((element)=>{\r\n          return(\r\n            <p key={element._id}>\r\n                <span>pseudo : {element.pseudoCreateur} </span>\r\n                <span>nom : {element.nomCreateur } </span>\r\n                <span>prenom : {element.prenomCreateur} </span>\r\n                <span>titre : {element.titre} </span>\r\n                <span>description : {element.description} </span>\r\n                <button onClick={()=>redirectPageDetail(element._id)}>detail signalement</button>\r\n               \r\n            </p>\r\n          )\r\n          \r\n        })\r\n      )\r\n    }\r\n    if(allSignalPost.length===0)\r\n    return (\r\n      <p>{errorMsg}</p>\r\n    )\r\n  }\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\DetailsSignalementMsg.jsx",["140","141","142"],[],"import React from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { useContext } from 'react';\r\nimport {AuthContext} from \"../../Context/AuthContext\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function DetailsSignalementMsg() {\r\n  const {token}  = useContext(AuthContext);\r\n  const {id} = useParams();\r\n  const [signalement, setsignalement] = useState(\"\");\r\n  const [nbsignalement, setnbsignalement] = useState(\"\");\r\n  const [msgErreur, setmsgErreur] = useState(\"\");\r\n  const [btnBanCocher, setbtnBanCocher] = useState(false);\r\n  const [btnSupCOcher, setbtnSupCOcher] = useState(false);\r\n  const [btnRasCOcher, setbtnRasCOcher] = useState(false);\r\n  const [reponseBanServer, setreponseBanServer] = useState(\"\");\r\n  const [reponseSupMsgServer, setreponseSupMsgServer] = useState(\"\");\r\n  const [reponseSupSignalServer, setreponseSupSignalServer] = useState(\"\");\r\n  const [idUser, setidUser] = useState(\"\");\r\n  const navigate = useNavigate();\r\n \r\n  useEffect(() => {\r\n     const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios.get(`/signalement/afficherMsgSignaler/${id}`,config)\r\n    .then((res)=>{\r\n      setsignalement(res.data);\r\n      setidUser(res.data.idUser);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n    axios.get(`/signalement/nbFoisMsgSignaler/${id}`,config)\r\n    .then((res)=>{\r\n      setnbsignalement(res.data);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n      const btnValider = document.getElementById(\"btnValider\");\r\n     \r\n      if(btnSupCOcher && btnBanCocher && btnRasCOcher){\r\n        btnValider.disabled=true;\r\n        return setmsgErreur(`vous ne pouvez pas faire les trois manipulations simultanément.`);\r\n      }\r\n      if(btnBanCocher && btnRasCOcher && (btnSupCOcher=== false || btnSupCOcher=== true )){\r\n        btnValider.disabled=true;\r\n        return setmsgErreur(`vous ne pouvez pas cocher \"bannir utilisateur\" et \"ne rien faire.\"`);\r\n      }\r\n      if(btnSupCOcher && btnRasCOcher && (btnBanCocher=== false || btnBanCocher=== true )){\r\n        btnValider.disabled=true;\r\n        return setmsgErreur(`vous ne pouvez pas cocher \"supprimer message\" et \"supprimer signalements car \"supprimer les messages\" revient à  supprimer les signalements du message également.\"`);\r\n      }\r\n      else{\r\n        btnValider.disabled=false;\r\n        return setmsgErreur(\"\");\r\n      }\r\n      \r\n  }, [btnBanCocher,btnRasCOcher,btnSupCOcher])\r\n\r\n  \r\n  const validerFormulaire = async()=>{\r\n   \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const ban ={bannis:true};\r\n    const idMessage = signalement._id;\r\n   \r\n\r\n    if(btnBanCocher && btnSupCOcher==false && btnRasCOcher=== false){\r\n       axios.put(`/admin/banUser/${idUser}`,ban,config)\r\n      .then((res)=>setreponseBanServer(res.data))\r\n      .catch((err)=>{console.log(err)})\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/admin/signalementMessage\");\r\n      }, 4000);\r\n    }\r\n\r\n    if(btnSupCOcher && btnBanCocher==false && btnRasCOcher ===false){\r\n      axios.delete(`/signalement/supprimerSignalementMsg/${idMessage}`,config)\r\n      .then((res)=>setreponseSupSignalServer(res.data))\r\n      .catch((err)=>console.log(err));\r\n\r\n      await axios.delete(`/admin/deleteMsg/${idMessage}`,config)\r\n      .then((res)=>setreponseSupMsgServer(res.data))\r\n      .catch((err)=>console.log(err));\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/admin/signalementMessage\");\r\n      }, 4000);\r\n   }\r\n\r\n   if(btnSupCOcher && btnBanCocher && btnRasCOcher ===false){\r\n    await axios.put(`/admin/banUser/${idUser}`,ban,config)\r\n    .then((res)=>setreponseBanServer(res.data))\r\n    .catch((err)=>{console.log(err)});\r\n\r\n    await axios.delete(`/signalement/supprimerSignalementMsg/${idMessage}`,config)\r\n    .then((res)=>setreponseSupSignalServer(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    await axios.delete(`/admin/deleteMsg/${idMessage}`,config)\r\n    .then((res)=>setreponseSupMsgServer(res.data))\r\n    .catch((err)=>console.log(err));\r\n    \r\n    setTimeout(() => {\r\n      navigate(\"/admin/signalementMessage\");\r\n    }, 4000);\r\n\r\n }\r\n if(btnRasCOcher && btnBanCocher ===false && btnSupCOcher ===false){\r\n    await axios.delete(`/signalement/supprimerSignalementMsg/${idMessage}`,config)\r\n    .then((res)=>setreponseSupSignalServer(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    setTimeout(() => {\r\n      navigate(\"/admin/signalementMessage\");\r\n    }, 5000);\r\n }\r\n    \r\n  }\r\n  \r\n \r\n  return (\r\n    <div>\r\n        <p>\r\n          <span>Message créer par {signalement.nomCreateurMessage} {signalement.prenomCreateurMessage} (pseudo : {signalement.pseudoCreateurMessage}) </span>\r\n          <span>nombre de signalements : {nbsignalement}</span>\r\n        </p>\r\n        <p>contenu : {signalement.contenu} </p>\r\n        <p>\r\n          <label htmlFor=\"\">bannir utilisateur </label>\r\n          <input onChange={()=>setbtnBanCocher(!btnBanCocher)} id=\"ban\" type=\"checkbox\"/>\r\n\r\n          <label htmlFor=\"\">supprimer message </label>\r\n          <input onChange={()=>setbtnSupCOcher(!btnSupCOcher)}   id=\"sup\" type=\"checkbox\"/>\r\n\r\n          <label htmlFor=\"\">supprimer les signalements </label>\r\n          <input onChange={()=>setbtnRasCOcher(!btnRasCOcher)}   id=\"rien\" type=\"checkbox\"/>\r\n        </p>\r\n        <div>\r\n            <p>{reponseBanServer}</p>\r\n            <p>{reponseSupMsgServer}</p>\r\n            <p>{reponseSupSignalServer}</p>\r\n        </div>\r\n        <p>\r\n          {msgErreur}\r\n        </p>\r\n        <p>\r\n          <button onClick={validerFormulaire} id='btnValider'>valider</button>\r\n        </p>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Admin\\DetailsSignalementPost.jsx",["143","144","145"],[],"import React from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { useContext } from 'react';\r\nimport {AuthContext} from \"../../Context/AuthContext\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function DetailsSignalementPost() {\r\n  const {token}  = useContext(AuthContext);\r\n  const {id} = useParams();\r\n  const [signalement, setsignalement] = useState(\"\");\r\n  const [nbsignalement, setnbsignalement] = useState(\"\");\r\n  const [msgErreur, setmsgErreur] = useState(\"\");\r\n  const [btnBanCocher, setbtnBanCocher] = useState(false);\r\n  const [btnSupCOcher, setbtnSupCOcher] = useState(false);\r\n  const [btnRasCOcher, setbtnRasCOcher] = useState(false);\r\n  const [reponseBanServer, setreponseBanServer] = useState(\"\");\r\n  const [reponseSupMsgServer, setreponseSupMsgServer] = useState(\"\");\r\n  const [reponseSupSignalServer, setreponseSupSignalServer] = useState(\"\");\r\n  const [idUser, setidUser] = useState(\"\");\r\n  const navigate = useNavigate();\r\n \r\n  useEffect(() => {\r\n     const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios.get(`/signalement/afficherPostSignaler/${id}`,config)\r\n    .then((res)=>{\r\n      setsignalement(res.data);\r\n      setidUser(res.data.idUser);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n    axios.get(`/signalement/nbFoisPostSignaler/${id}`,config)\r\n    .then((res)=>{\r\n      setnbsignalement(res.data);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n      const btnValider = document.getElementById(\"btnValider\");\r\n     \r\n      if(btnSupCOcher && btnBanCocher && btnRasCOcher){\r\n        btnValider.disabled=true;\r\n        return setmsgErreur(`vous ne pouvez pas faire les trois manipulations simultanément.`);\r\n      }\r\n      if(btnBanCocher && btnRasCOcher && (btnSupCOcher=== false || btnSupCOcher=== true )){\r\n        btnValider.disabled=true;\r\n        return setmsgErreur(`vous ne pouvez pas cocher \"bannir utilisateur\" et \"ne rien faire.\"`);\r\n      }\r\n      if(btnSupCOcher && btnRasCOcher && (btnBanCocher=== false || btnBanCocher=== true )){\r\n        btnValider.disabled=true;\r\n        return setmsgErreur(`vous ne pouvez pas cocher \"supprimer Post\" et \"supprimer signalements car \"supprimer les messages\" revient à  supprimer les signalements du Post également.\"`);\r\n      }\r\n      else{\r\n        btnValider.disabled=false;\r\n        return setmsgErreur(\"\");\r\n      }\r\n      \r\n  }, [btnBanCocher,btnRasCOcher,btnSupCOcher])\r\n\r\n  \r\n  const validerFormulaire = async()=>{\r\n   \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const ban ={bannis:true};\r\n    const idPost = signalement._id;\r\n   \r\n\r\n    if(btnBanCocher && btnSupCOcher==false && btnRasCOcher=== false){\r\n       axios.put(`/admin/banUser/${idUser}`,ban,config)\r\n      .then((res)=>setreponseBanServer(res.data))\r\n      .catch((err)=>{console.log(err)})\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/admin/signalementPost\");\r\n      }, 4000);\r\n    }\r\n\r\n    if(btnSupCOcher && btnBanCocher==false && btnRasCOcher ===false){\r\n      axios.delete(`/signalement/supprimerSignalementPost/${idPost}`,config)\r\n      .then((res)=>setreponseSupSignalServer(res.data))\r\n      .catch((err)=>console.log(err));\r\n\r\n      await axios.delete(`/admin/deletePost/${idPost}`,config)\r\n      .then((res)=>setreponseSupMsgServer(res.data))\r\n      .catch((err)=>console.log(err));\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/admin/signalementPost\");\r\n      }, 4000);\r\n   }\r\n\r\n   if(btnSupCOcher && btnBanCocher && btnRasCOcher ===false){\r\n    await axios.put(`/admin/banUser/${idUser}`,ban,config)\r\n    .then((res)=>setreponseBanServer(res.data))\r\n    .catch((err)=>{console.log(err)});\r\n\r\n    await axios.delete(`/signalement/supprimerSignalementPost/${idPost}`,config)\r\n    .then((res)=>setreponseSupSignalServer(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    await axios.delete(`/admin/deletePost/${idPost}`,config)\r\n    .then((res)=>setreponseSupMsgServer(res.data))\r\n    .catch((err)=>console.log(err));\r\n    \r\n    setTimeout(() => {\r\n      navigate(\"/admin/signalementPost\");\r\n    }, 4000);\r\n\r\n }\r\n if(btnRasCOcher && btnBanCocher ===false && btnSupCOcher ===false){\r\n    await axios.delete(`/signalement/supprimerSignalementPost/${idPost}`,config)\r\n    .then((res)=>setreponseSupSignalServer(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    setTimeout(() => {\r\n      navigate(\"/admin/signalementPost\");\r\n    }, 5000);\r\n }\r\n    \r\n  }\r\n  \r\n \r\n  return (\r\n    <div>\r\n        <p>\r\n          <span>Message créer par {signalement.nomCreateur} {signalement.prenomCreateur} (pseudo : {signalement.pseudoCreateur}) </span>\r\n          <span>nombre de signalements : {nbsignalement}</span>\r\n        </p>\r\n        <p>titre : {signalement.titre} </p>\r\n        <p>description : {signalement.description} </p>\r\n        <p>\r\n          <label htmlFor=\"\">bannir utilisateur </label>\r\n          <input onChange={()=>setbtnBanCocher(!btnBanCocher)} id=\"ban\" type=\"checkbox\"/>\r\n\r\n          <label htmlFor=\"\">supprimer Post </label>\r\n          <input onChange={()=>setbtnSupCOcher(!btnSupCOcher)}   id=\"sup\" type=\"checkbox\"/>\r\n\r\n          <label htmlFor=\"\">supprimer les signalements </label>\r\n          <input onChange={()=>setbtnRasCOcher(!btnRasCOcher)}   id=\"rien\" type=\"checkbox\"/>\r\n        </p>\r\n        <div>\r\n            <p>{reponseBanServer}</p>\r\n            <p>{reponseSupMsgServer}</p>\r\n            <p>{reponseSupSignalServer}</p>\r\n        </div>\r\n        <p>\r\n          {msgErreur}\r\n        </p>\r\n        <p>\r\n          <button onClick={validerFormulaire} id='btnValider'>valider</button>\r\n        </p>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Accueil\\Accueil.jsx",[],[],"C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Inscription\\Inscription.jsx",[],[],"C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\Connexion\\Connexion.jsx",["146"],[],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\n\r\nexport default function Connexion() {\r\n  const navigate = useNavigate();\r\n   const [mail, setmail] = useState(\"\");\r\n   const [password, setpassword] = useState(\"\"); \r\n   const {token,settoken}  = useContext(AuthContext);\r\n\r\n    const valideForm = async (e)=>{\r\n        e.preventDefault();\r\n        const connection ={email:mail,password};\r\n        await axios.post(\"/user/login\",connection)\r\n        .then((res)=>{\r\n           localStorage.setItem(\"token\",res.data);\r\n           settoken(res.data);\r\n           navigate(\"/forum\");\r\n        })\r\n        .catch((err)=>console.log(err));\r\n    }\r\n \r\n\r\n  return (\r\n    <div>\r\n       <form onSubmit={valideForm}>\r\n            <input type=\"text\" placeholder=\"mail\" value={mail} onChange={(e)=>setmail(e.target.value)}/>\r\n            <input type=\"text\" placeholder=\"password\" value={password} onChange={(e)=>setpassword(e.target.value)}/>\r\n            <button>Se connecter</button>\r\n       </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\forum\\AccueilForum.js",["147"],[],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport \"../forum/accueilForum.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function AccueilForum() {\r\nconst [listePost, setlistePost] = useState([]);\r\nconst [categories, setcategories] = useState([]);\r\nconst {token,settoken}  = useContext(AuthContext);\r\nconst [recherchePost, setrecherchePost] = useState(\"\");\r\nconst [categorieBoolean, setcategorieBoolean] = useState(false);\r\nconst [errorMsg, seterrorMsg] = useState(\"\");\r\nconst [errorMsgCreerPost, seterrorMsgCreerPost] = useState(\"\");\r\nconst [valueElementCheckbox, setvalueElementCheckbox] = useState(\"Stratégie tournois\");\r\nconst [valueTextarea, setvalueTextarea] = useState(\"\");\r\nconst refListeCategories =useRef();\r\nconst navigate = useNavigate();\r\n\r\n// affichage des post au chargement de la page\r\nuseEffect(() => {\r\n  \r\n    axios.get(\"/post\")\r\n    .then((res)=>setlistePost(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    axios.get(\"/categorie/afficherAllCategories\")\r\n    .then((res)=>setcategories(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    const btnCheckbox = document.getElementById(\"tournois\");\r\n    btnCheckbox.checked=true;\r\n}, [])\r\n\r\n// gestion du boutton rechercher\r\nconst valideRecherche= ()=>{\r\n    const selecteur = document.getElementById(\"selecteur\");\r\n    if(recherchePost===\"\"){\r\n        return seterrorMsg(\"La recherche ne peut être vide\");\r\n    }\r\n    if(selecteur.value === \"sujet\"){\r\n        const mot = recherchePost;\r\n        axios.get(`/post/recherchepostesParmot/${mot}`)\r\n        .then((res)=>{\r\n            setlistePost(res.data);\r\n        })\r\n        .catch((err)=>\r\n        {\r\n            seterrorMsg(recherchePost+\" \"+err.response.data);\r\n        });\r\n    }\r\n\r\n    if(selecteur.value === \"auteur\"){\r\n        const pseudoCreateur = recherchePost;\r\n        axios.get(`/post/recherchepostesParPseudo/${pseudoCreateur}`)\r\n        .then((res)=>setlistePost(res.data))\r\n        .catch((err)=>\r\n        {\r\n            if(err.response.status === 404){\r\n                seterrorMsg(recherchePost+\" : \"+err.response.data);\r\n            }\r\n        });\r\n    }\r\n    setrecherchePost(\"\");\r\n}\r\n\r\n// gestion du clique categorie et de laffichage des postes de la categorie choisie\r\nconst triageCategorie=(categorie)=>{\r\n    axios.get(`/post/posteParCategorie/${categorie}`)\r\n    .then((res)=>setlistePost(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    setcategorieBoolean(false);\r\n    seterrorMsg(\"\");\r\n}\r\n\r\n// gestion de l'affichage de la div invisible ou visible des catégories\r\nconst etatCategorie =()=>{\r\n    setcategorieBoolean(!categorieBoolean);\r\n}\r\n\r\n// gestion du clique du boutton \"tous les posts\"\r\nconst afficherAllPost =()=>{\r\n    axios.get(\"/post\")\r\n    .then((res)=>setlistePost(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    seterrorMsg(\"\");\r\n}\r\n\r\n//gestion du rendu visible de la div catégorie si boolean est true ou false\r\nuseEffect(() => {\r\n    if(categorieBoolean===true){\r\n        refListeCategories.current.classList.remove(\"invisible\");\r\n        refListeCategories.current.classList.add(\"visible\");\r\n    }\r\n    if(categorieBoolean===false){\r\n        refListeCategories.current.classList.remove(\"visible\");\r\n        refListeCategories.current.classList.add(\"invisible\");\r\n    }\r\n    \r\n}, [categorieBoolean])\r\n\r\n// gestion de la checkbox et du checked = false de tous élément excépté celui qui est cliqué\r\nconst test2 =(id,element1,element2,element3,element4)=>{\r\n    const elementprincipal = document.getElementById(id);\r\n    const elements2 = document.getElementById(element1);\r\n    const elements3 = document.getElementById(element2);\r\n    const elements4 = document.getElementById(element3);\r\n    const elements5 = document.getElementById(element4);\r\n    const tab = [elements5,elements2,elements3,elements4];\r\n\r\n    tab.forEach(element => {\r\n        element.checked=false;\r\n    });\r\n    setvalueElementCheckbox(elementprincipal.value);\r\n}\r\n\r\n// ce qu'il se passe quant on valide le formulaire\r\nconst  validerFormPost  = async () => {\r\n    const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n\r\n    const elements1 = document.getElementById(\"tournois\");\r\n    const elements2 = document.getElementById(\"spin\");\r\n    const elements3 = document.getElementById(\"cashGame\");\r\n    const elements4 = document.getElementById(\"general\");\r\n    const elements5 = document.getElementById(\"logiciel\");\r\n\r\n    if(elements1.checked === false & elements2.checked === false & elements3.checked === false & elements4.checked === false & elements5.checked === false ){\r\n       return seterrorMsgCreerPost(\"Vous devez choisir une catégorie.\");\r\n    }\r\n\r\n    if(valueTextarea.length===0){\r\n       return seterrorMsgCreerPost(\"le titre ne doit pas être vide.\");\r\n    }\r\n    if(valueTextarea.length<10){\r\n      return  seterrorMsgCreerPost(\"le titre ne peux pas contenir moins de 10 caractères.\");\r\n    }\r\n    if(valueTextarea.length>150){\r\n      return  seterrorMsgCreerPost(\"le titre ne peux pas contenir plus de 150 caractères.\");\r\n    }\r\n   \r\n    const newPost = {};\r\n    newPost.categorie=valueElementCheckbox;\r\n    newPost.titre=valueTextarea;\r\n\r\n    await axios.post(\"/post/creerPost\",newPost,config)\r\n    .then((res)=>{ \r\n        setlistePost([res.data,...listePost]);\r\n        seterrorMsgCreerPost(\"Post créé avec succès.\")\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n    await axios.get(\"/categorie/afficherAllCategories\")\r\n    .then((res)=>setcategories(res.data))\r\n    .catch((err)=>console.log(err));\r\n\r\n    setvalueTextarea(\"\");\r\n}\r\n\r\n// permet de rediriger lutilisateur vers la création du post en cliquand sur \"nouveau sujet\"\r\nconst scrollDownSmooth =()=>{\r\n    document.querySelector('#creationNewPostForm').scrollIntoView({\r\n        behavior: 'smooth'\r\n      });\r\n}\r\n\r\n// navigation vers les messages du post quand on clique sur le post\r\nconst accesPageMessagePost= (idPost)=>{\r\n    navigate(`/forum/messagePost/${idPost}`);\r\n}\r\n\r\n  return (\r\n    <div>\r\n       <h1>forum Poker</h1>\r\n       <div className='partieMsgErreurSectionTriage'>\r\n            <p>{errorMsg}</p>\r\n       </div>\r\n       <div className='sectionTriage'>\r\n            <div  ref={refListeCategories} className='listeCategories invisible'>\r\n                {\r\n                    categories.map((element)=>{\r\n                        return(\r\n                        <div onClick={()=>triageCategorie(element.titre)} key={element.titre} className='uneCategorie'>\r\n                            <p>{element.titre} - {element.nombrePost} </p>\r\n                            <p >{element.contenu}</p>\r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <button onClick={etatCategorie} className='nouveauSujet'>Catégorie</button>\r\n            <div className='partieRecherchePost'>\r\n                <input value={recherchePost} onChange={(e)=>{\r\n                    setrecherchePost(e.target.value);\r\n                    seterrorMsg(\"\");\r\n                    }} type=\"text\" placeholder=\"rechercher Sujet\"/>\r\n                <select id='selecteur' name=\"nyc\">\r\n                    <option value=\"sujet\">sujet</option>\r\n                    <option value=\"auteur\">Auteur</option>\r\n                </select>\r\n                <button className='bouttonRecherche2' onClick={valideRecherche}>rechercher</button>\r\n            </div>\r\n            <p className='paraBouttons'>\r\n                <button onClick={afficherAllPost} className='bouttonAllPost'>Tous les posts</button>\r\n                <button onClick={scrollDownSmooth} className='creerNewPost'>Nouveau sujet</button>\r\n            </p>\r\n       </div>\r\n       <div className='tableauPost'>    \r\n            <table >\r\n                <thead>\r\n                    <tr>\r\n                        <td>Sujet</td>\r\n                        <td>Réponses</td>\r\n                        <td>Auteur</td>\r\n                        <td>date</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listePost.map((element)=>{\r\n                        return(\r\n                            <tr className='la' key={element._id}>\r\n                                <td className='titreDuPost' onClick={()=>accesPageMessagePost(element._id)}>{element.titre}</td>\r\n                                <td>{element.nombreMessages}</td>\r\n                                <td>{element.pseudoCreateur}</td>\r\n                                <td>{element.dateCreation}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n       </div>\r\n       <div id='creationNewPostForm' className='formulaireCreerNewPost'>\r\n            <h1 className='titreNewSujet'>Nouveau Sujet</h1>\r\n            <div className='partieTitreTextPost'>\r\n                <p className='labelTitrePost'>\r\n                    titre : \r\n                </p>\r\n                <p className='texteareaFormPost'>\r\n                    <textarea value={valueTextarea} onChange={(e)=>{\r\n                        setvalueTextarea(e.target.value);\r\n                        seterrorMsgCreerPost(\"\");\r\n                        }} placeholder='Saisir titre'></textarea>\r\n                </p>\r\n            </div>\r\n            <div className='partieCheckbox'>\r\n                <div className='titreCheckbox'>\r\n                    Catégorie :\r\n                </div>\r\n                <div className='allCheckbox'>\r\n                    <p>\r\n                        <input onClick={()=>test2(\"tournois\",\"cashGame\",\"spin\",\"general\",\"logiciel\")} type=\"checkbox\" id=\"tournois\" name=\"vehicle1\" value=\"Stratégie tournois\"/>\r\n                        <label > Stratégie tournois</label>\r\n                    </p>\r\n                    <p>\r\n                        <input onClick={()=>test2(\"cashGame\",\"tournois\",\"spin\",\"general\",\"logiciel\")} type=\"checkbox\" id=\"cashGame\" name=\"vehicle2\" value=\"Stratégie cash game\"/>\r\n                        <label > Stratégie cash game</label>\r\n                    </p>\r\n                    <p>\r\n                        <input onClick={()=>test2(\"spin\",\"tournois\",\"cashGame\",\"general\",\"logiciel\")} type=\"checkbox\" id=\"spin\" name=\"vehicle3\" value=\"Stratégie Spin & Go\"/>\r\n                        <label > Stratégie Spin & Go</label>\r\n                    </p>\r\n                    <p>\r\n                        <input onClick={()=>test2(\"general\",\"tournois\",\"spin\",\"cashGame\",\"logiciel\")} type=\"checkbox\" id=\"general\" name=\"vehicle3\" value=\"Général\"/>\r\n                        <label > Général</label>\r\n                    </p>\r\n                    <p>\r\n                        <input onClick={()=>test2(\"logiciel\",\"tournois\",\"spin\",\"general\",\"cashGame\")} type=\"checkbox\" id=\"logiciel\" name=\"vehicle3\" value=\"Logiciel de poker\"/>\r\n                        <label > Logiciel de poker</label>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <p className='errorMsgCreerPost2'>\r\n                {errorMsgCreerPost}\r\n            </p>\r\n            <button onClick={validerFormPost} className='creerFormPost'>Créér</button>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\aurel\\OneDrive\\Bureau\\projetfinal2\\client\\src\\pages\\messagePost\\MessagesDesPost.js",["148","149","150","151","152","153","154","155","156","157","158","159","160"],[],{"ruleId":"161","severity":1,"message":"162","line":13,"column":16,"nodeType":"163","messageId":"164","endLine":13,"endColumn":24},{"ruleId":"161","severity":1,"message":"165","line":20,"column":16,"nodeType":"163","messageId":"164","endLine":20,"endColumn":23},{"ruleId":"161","severity":1,"message":"166","line":22,"column":10,"nodeType":"163","messageId":"164","endLine":22,"endColumn":21},{"ruleId":"161","severity":1,"message":"167","line":24,"column":22,"nodeType":"163","messageId":"164","endLine":24,"endColumn":35},{"ruleId":"161","severity":1,"message":"168","line":25,"column":10,"nodeType":"163","messageId":"164","endLine":25,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":49,"column":6,"nodeType":"171","endLine":49,"endColumn":8,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":76,"column":17,"nodeType":"175","messageId":"176","endLine":76,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":79,"column":15,"nodeType":"175","messageId":"176","endLine":79,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":79,"column":78,"nodeType":"175","messageId":"176","endLine":79,"endColumn":80},{"ruleId":"169","severity":1,"message":"177","line":82,"column":6,"nodeType":"171","endLine":82,"endColumn":17,"suggestions":"178"},{"ruleId":"173","severity":1,"message":"174","line":109,"column":15,"nodeType":"175","messageId":"176","endLine":109,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":112,"column":15,"nodeType":"175","messageId":"176","endLine":112,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":112,"column":78,"nodeType":"175","messageId":"176","endLine":112,"endColumn":80},{"ruleId":"169","severity":1,"message":"179","line":115,"column":6,"nodeType":"171","endLine":115,"endColumn":15,"suggestions":"180"},{"ruleId":"161","severity":1,"message":"181","line":138,"column":8,"nodeType":"163","messageId":"164","endLine":138,"endColumn":15},{"ruleId":"161","severity":1,"message":"182","line":150,"column":8,"nodeType":"163","messageId":"164","endLine":150,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":161,"column":56,"nodeType":"175","messageId":"176","endLine":161,"endColumn":58},{"ruleId":"161","severity":1,"message":"183","line":167,"column":8,"nodeType":"163","messageId":"164","endLine":167,"endColumn":18},{"ruleId":"161","severity":1,"message":"184","line":173,"column":8,"nodeType":"163","messageId":"164","endLine":173,"endColumn":21},{"ruleId":"161","severity":1,"message":"185","line":178,"column":8,"nodeType":"163","messageId":"164","endLine":178,"endColumn":20},{"ruleId":"186","severity":1,"message":"187","line":258,"column":50,"nodeType":"188","messageId":"189","endLine":258,"endColumn":52},{"ruleId":"161","severity":1,"message":"162","line":15,"column":18,"nodeType":"163","messageId":"164","endLine":15,"endColumn":26},{"ruleId":"169","severity":1,"message":"190","line":41,"column":8,"nodeType":"171","endLine":41,"endColumn":10,"suggestions":"191"},{"ruleId":"173","severity":1,"message":"174","line":67,"column":17,"nodeType":"175","messageId":"176","endLine":67,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":70,"column":15,"nodeType":"175","messageId":"176","endLine":70,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":70,"column":78,"nodeType":"175","messageId":"176","endLine":70,"endColumn":80},{"ruleId":"169","severity":1,"message":"177","line":73,"column":6,"nodeType":"171","endLine":73,"endColumn":17,"suggestions":"192"},{"ruleId":"173","severity":1,"message":"174","line":100,"column":15,"nodeType":"175","messageId":"176","endLine":100,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":103,"column":15,"nodeType":"175","messageId":"176","endLine":103,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":103,"column":78,"nodeType":"175","messageId":"176","endLine":103,"endColumn":80},{"ruleId":"169","severity":1,"message":"179","line":106,"column":6,"nodeType":"171","endLine":106,"endColumn":15,"suggestions":"193"},{"ruleId":"186","severity":1,"message":"187","line":44,"column":48,"nodeType":"188","messageId":"189","endLine":44,"endColumn":50},{"ruleId":"161","severity":1,"message":"162","line":10,"column":16,"nodeType":"163","messageId":"164","endLine":10,"endColumn":24},{"ruleId":"169","severity":1,"message":"170","line":30,"column":6,"nodeType":"171","endLine":30,"endColumn":8,"suggestions":"194"},{"ruleId":"173","severity":1,"message":"174","line":38,"column":25,"nodeType":"175","messageId":"176","endLine":38,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":11,"column":16,"nodeType":"163","messageId":"164","endLine":11,"endColumn":24},{"ruleId":"173","severity":1,"message":"174","line":26,"column":19,"nodeType":"175","messageId":"176","endLine":26,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":42,"column":6,"nodeType":"171","endLine":42,"endColumn":8,"suggestions":"195"},{"ruleId":"161","severity":1,"message":"162","line":10,"column":18,"nodeType":"163","messageId":"164","endLine":10,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":30,"column":8,"nodeType":"171","endLine":30,"endColumn":10,"suggestions":"196"},{"ruleId":"173","severity":1,"message":"174","line":38,"column":28,"nodeType":"175","messageId":"176","endLine":38,"endColumn":30},{"ruleId":"169","severity":1,"message":"197","line":46,"column":6,"nodeType":"171","endLine":46,"endColumn":8,"suggestions":"198"},{"ruleId":"173","severity":1,"message":"199","line":83,"column":36,"nodeType":"175","messageId":"176","endLine":83,"endColumn":38},{"ruleId":"173","severity":1,"message":"199","line":93,"column":36,"nodeType":"175","messageId":"176","endLine":93,"endColumn":38},{"ruleId":"169","severity":1,"message":"197","line":46,"column":6,"nodeType":"171","endLine":46,"endColumn":8,"suggestions":"200"},{"ruleId":"173","severity":1,"message":"199","line":83,"column":36,"nodeType":"175","messageId":"176","endLine":83,"endColumn":38},{"ruleId":"173","severity":1,"message":"199","line":93,"column":36,"nodeType":"175","messageId":"176","endLine":93,"endColumn":38},{"ruleId":"161","severity":1,"message":"201","line":12,"column":11,"nodeType":"163","messageId":"164","endLine":12,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":15,"column":14,"nodeType":"163","messageId":"164","endLine":15,"endColumn":22},{"ruleId":"161","severity":1,"message":"162","line":16,"column":16,"nodeType":"163","messageId":"164","endLine":16,"endColumn":24},{"ruleId":"161","severity":1,"message":"202","line":25,"column":11,"nodeType":"163","messageId":"164","endLine":25,"endColumn":18},{"ruleId":"161","severity":1,"message":"203","line":25,"column":20,"nodeType":"163","messageId":"164","endLine":25,"endColumn":30},{"ruleId":"161","severity":1,"message":"204","line":26,"column":10,"nodeType":"163","messageId":"164","endLine":26,"endColumn":33},{"ruleId":"161","severity":1,"message":"205","line":26,"column":35,"nodeType":"163","messageId":"164","endLine":26,"endColumn":61},{"ruleId":"169","severity":1,"message":"197","line":108,"column":6,"nodeType":"171","endLine":108,"endColumn":8,"suggestions":"206"},{"ruleId":"173","severity":1,"message":"199","line":127,"column":45,"nodeType":"175","messageId":"176","endLine":127,"endColumn":47},{"ruleId":"207","severity":1,"message":"208","line":131,"column":13,"nodeType":"209","endLine":131,"endColumn":81},{"ruleId":"207","severity":1,"message":"208","line":139,"column":9,"nodeType":"209","endLine":139,"endColumn":66},{"ruleId":"207","severity":1,"message":"208","line":200,"column":11,"nodeType":"209","endLine":200,"endColumn":62},{"ruleId":"173","severity":1,"message":"199","line":205,"column":37,"nodeType":"175","messageId":"176","endLine":205,"endColumn":39},{"ruleId":"207","severity":1,"message":"208","line":208,"column":13,"nodeType":"209","endLine":208,"endColumn":63},{"ruleId":"207","severity":1,"message":"208","line":215,"column":9,"nodeType":"209","endLine":215,"endColumn":60},"no-unused-vars","'settoken' is assigned a value but never used.","Identifier","unusedVar","'setpost' is assigned a value but never used.","'boolSupPost' is assigned a value but never used.","'setmsgMessage' is assigned a value but never used.","'nb' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["210"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'MsgPost'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has a missing dependency: 'titrePost'. Either include it or remove the dependency array.",["212"],"'supPost' is assigned a value but never used.","'validationSupPost' is assigned a value but never used.","'nonSupPost' is assigned a value but never used.","'pageModifPost' is assigned a value but never used.","'creerMessage' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'idPost' and 'token'. Either include them or remove the dependency array.",["213"],["214"],["215"],["216"],["217"],["218"],"React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["219"],"Expected '===' and instead saw '=='.",["220"],"'token' is assigned a value but never used.","'nbLikes' is assigned a value but never used.","'setnbLikes' is assigned a value but never used.","'arriverListeSignalement' is assigned a value but never used.","'setarriverListeSignalement' is assigned a value but never used.",["221"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},{"desc":"224","fix":"229"},{"desc":"224","fix":"230"},{"desc":"222","fix":"231"},{"desc":"222","fix":"232"},{"desc":"222","fix":"233"},{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"234","fix":"237"},"Update the dependencies array to be: [token]",{"range":"238","text":"239"},"Update the dependencies array to be: [MsgPost, titrePost]",{"range":"240","text":"241"},{"range":"242","text":"241"},"Update the dependencies array to be: [idPost, token]",{"range":"243","text":"244"},{"range":"245","text":"241"},{"range":"246","text":"241"},{"range":"247","text":"239"},{"range":"248","text":"239"},{"range":"249","text":"239"},"Update the dependencies array to be: [id, token]",{"range":"250","text":"251"},{"range":"252","text":"251"},{"range":"253","text":"251"},[1891,1893],"[token]",[2863,2874],"[MsgPost, titrePost]",[3821,3830],[1585,1587],"[idPost, token]",[2558,2569],[3517,3526],[822,824],[1273,1275],[900,902],[1580,1582],"[id, token]",[1583,1585],[3415,3417]]
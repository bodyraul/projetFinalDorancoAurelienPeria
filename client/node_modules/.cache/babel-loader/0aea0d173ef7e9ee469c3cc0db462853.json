{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aurel\\\\OneDrive\\\\Bureau\\\\projetfinal2\\\\client\\\\src\\\\pages\\\\messagePost\\\\MessagesDesPost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../Context/AuthContext';\nimport \"../messagePost/messageDesPost.css\";\nimport likeNoir from \"../../photo/likeNoir.svg\";\nimport likeVert from \"../../photo/likeVert.svg\";\nimport signaler from \"../../photo/signaler.svg\";\nimport signalerRouge from \"../../photo/signalerRouge.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessagesPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    token,\n    settoken\n  } = useContext(AuthContext);\n  const [errMsgCreationMsg, seterrMsgCreationMsg] = useState(\"\");\n  const [valueMsgForm, setvalueMsgForm] = useState(\"\");\n  const [post, setpost] = useState({});\n  const [allMsg, setallMsg] = useState([]);\n  const [tailleAllMsg, settailleAllMsg] = useState(false);\n  const [messageServer, setmessageServer] = useState(\"\");\n  const [listeSignalementUser, setlisteSignalementUser] = useState([]);\n  const [listeLikeUser, setlisteLikeUser] = useState([]);\n  const [nbLikes, setnbLikes] = useState(0);\n  const [arriverListeSignalement, setarriverListeSignalement] = useState(false);\n\n  // requete qui permet de créér un message et d'actualiser l'affichage\n  const validerMsgForm = async () => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    if (valueMsgForm.length === 0) {\n      return seterrMsgCreationMsg(\"le message ne peut pas être vide\");\n    }\n    if (valueMsgForm.length > 1000) {\n      return seterrMsgCreationMsg(\"le message ne peut pas dépasser 1000 caractères\");\n    }\n    const newMessage = {};\n    newMessage.contenu = valueMsgForm;\n    await axios.post(`/message/creerMessage/${id}`, newMessage, config).then(res => console.log(res)).catch(err => console.log(err));\n    await axios.get(`/message/afficherMesMessages/${id}`, config).then(res => {\n      setallMsg(res.data);\n      console.log(res.data);\n    }).catch(err => console.log(err));\n    seterrMsgCreationMsg(\"message Créé.\");\n    setvalueMsgForm(\"\");\n  };\n\n  //affichage des messages au chargement , du post et des signalements de l'user pour les msg du post\n  useEffect(() => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    async function messages() {\n      await axios.get(`/message/afficherMesMessages/${id}`, config).then(res => {\n        setallMsg(res.data);\n      }).catch(err => setmessageServer(err.response.data));\n    }\n    async function monPoste() {\n      await axios.get(`/post/monPoste/${id}`, config).then(res => setpost(res.data)).catch(err => console.log(err));\n    }\n    async function signalements() {\n      await axios.get(`/signalement/AfficherMessageSignalerParPost/${id}`, config).then(res => {\n        setlisteSignalementUser(res.data);\n      }).catch(err => console.log(err));\n    }\n    async function like() {\n      await axios.get(`/like/AfficherMessageLikerParPost/${id}`, config).then(res => {\n        console.log(res);\n        setlisteLikeUser(res.data);\n      }).catch(err => console.log(err));\n    }\n    messages();\n    monPoste();\n    signalements();\n    like();\n  }, []);\n\n  // permet de savoir au chargement combien de messages on a et d'afficher \"aucun message\" s'il n'y en a pas\n  useEffect(() => {\n    if (allMsg.length === 0) {\n      return settailleAllMsg(false);\n    }\n    if (allMsg.length > 0) {\n      return settailleAllMsg(true);\n    }\n  }, [allMsg]);\n\n  // on compare ici les id message de la liste message avec l'id message des signalements message de l'utilisateur\n  // pour voir les messages qu'il a signalé\n  const messageSignals = idMsg => {\n    for (var k = 0; k <= listeSignalementUser.length - 1; k++) {\n      if (listeSignalementUser[k].idMessage == idMsg) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signalement\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Message signal\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => supSignalementMessage(idMsg),\n            src: signalerRouge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signalement\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Signal\\xE9 message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => signalerMessage(idMsg),\n        src: signaler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  };\n\n  // requete qui permet de signaler un message\n  const signalerMessage = async idMsg => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const signal = {};\n    signal.nom = \"oui\";\n    await axios.post(`/signalement/signalementMessage/${idMsg}`, signal, config).then(res => {}).catch(err => console.log(err));\n    await axios.get(`/signalement/AfficherMessageSignalerParPost/${id}`, config).then(res => {\n      setlisteSignalementUser(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  // on compare ici les id message de la liste message avec l'id message des  message likés de l'utilisateur\n  // pour voir les messages qu'il a liké\n  const messageLike = (idMsg, nblike) => {\n    if (listeLikeUser.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"like\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => creerLike(idMsg),\n          src: likeNoir\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this);\n    }\n    for (var k = 0; k <= listeLikeUser.length - 1; k++) {\n      if (listeLikeUser[k].idMessage == idMsg) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"like\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: nblike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => suppLike(idMsg),\n            src: likeVert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"like\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: nblike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => creerLike(idMsg),\n        src: likeNoir\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  };\n\n  // requete qui permet de supprimer le  signalement d'un message\n  const supSignalementMessage = async idMsg => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    await axios.delete(`/signalement/signalementMessage/${idMsg}`, config).then(res => {}).catch(err => console.log(err));\n    await axios.get(`/signalement/AfficherMessageSignalerParPost/${id}`, config).then(res => {\n      setlisteSignalementUser(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  //permet de créer un like\n  const creerLike = async idMsg => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const like = {\n      nom: \"oui\"\n    };\n    await axios.post(`/like/creerLike/${idMsg}`, like, config).then(res => console.log(res)).catch(err => console.log(err));\n    await axios.get(`/like/AfficherMessageLikerParPost/${id}`, config).then(res => {\n      console.log(res);\n      setlisteLikeUser(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  //permet de supprimer un like\n  const suppLike = async idMsg => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    await axios.delete(`/like/supprimerLike/${idMsg}`, config).then(res => console.log(res)).catch(err => console.log(err));\n    await axios.get(`/like/AfficherMessageLikerParPost/${id}`, config).then(res => {\n      console.log(res);\n      setlisteLikeUser(res.data);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"presentationPost\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.titre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.categorie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), tailleAllMsg === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"messageServer\",\n      children: messageServer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 35\n    }, this) : allMsg.map(message => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allMsgDuPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enteteMsgDuPost\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.pseudoCreateurMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [message.dateCreation, \" \\xE0 \", message.heureCreation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contenuMsgDuPost\",\n          children: message.contenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"partieBtnAffichageMsg\",\n          children: [messageLike(message._id, message.nbLike), messageSignals(message._id)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"finDuMsg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"creationMsgDuPost\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: valueMsgForm,\n          onChange: e => setvalueMsgForm(e.target.value),\n          className: \"ecrireMsgDuPost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errMsgCreationMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: validerMsgForm,\n        className: \"validerBtnMsgDuPost\",\n        children: \"valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}\n_s(MessagesPost, \"614W4v9SJMsRjQ6kjes+sVZFQpI=\", false, function () {\n  return [useParams];\n});\n_c = MessagesPost;\nvar _c;\n$RefreshReg$(_c, \"MessagesPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","useContext","AuthContext","likeNoir","likeVert","signaler","signalerRouge","MessagesPost","id","token","settoken","errMsgCreationMsg","seterrMsgCreationMsg","valueMsgForm","setvalueMsgForm","post","setpost","allMsg","setallMsg","tailleAllMsg","settailleAllMsg","messageServer","setmessageServer","listeSignalementUser","setlisteSignalementUser","listeLikeUser","setlisteLikeUser","nbLikes","setnbLikes","arriverListeSignalement","setarriverListeSignalement","validerMsgForm","config","headers","Authorization","length","newMessage","contenu","then","res","console","log","catch","err","get","data","messages","response","monPoste","signalements","like","messageSignals","idMsg","k","idMessage","supSignalementMessage","signalerMessage","signal","nom","messageLike","nblike","creerLike","suppLike","delete","titre","categorie","map","message","pseudoCreateurMessage","dateCreation","heureCreation","_id","nbLike","e","target","value"],"sources":["C:/Users/aurel/OneDrive/Bureau/projetfinal2/client/src/pages/messagePost/MessagesDesPost.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport \"../messagePost/messageDesPost.css\"\r\nimport likeNoir from\"../../photo/likeNoir.svg\";\r\nimport likeVert from\"../../photo/likeVert.svg\";\r\nimport signaler from\"../../photo/signaler.svg\";\r\nimport signalerRouge from\"../../photo/signalerRouge.svg\";\r\n\r\nexport default function MessagesPost() {\r\n  const {id} = useParams();\r\n  const {token,settoken}  = useContext(AuthContext);\r\n  const [errMsgCreationMsg, seterrMsgCreationMsg] = useState(\"\");\r\n  const [valueMsgForm, setvalueMsgForm] = useState(\"\");\r\n  const [post, setpost] = useState({});\r\n  const [allMsg, setallMsg] = useState([]);\r\n  const [tailleAllMsg, settailleAllMsg] = useState(false);\r\n  const [messageServer, setmessageServer] = useState(\"\");\r\n  const [listeSignalementUser, setlisteSignalementUser] = useState([]);\r\n  const [listeLikeUser, setlisteLikeUser] = useState([]);\r\n  const  [nbLikes, setnbLikes] = useState(0);\r\n  const [arriverListeSignalement, setarriverListeSignalement] = useState(false);\r\n\r\n\r\n  // requete qui permet de créér un message et d'actualiser l'affichage\r\n  const validerMsgForm =async()=>{\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    if(valueMsgForm.length===0){\r\n      return seterrMsgCreationMsg(\"le message ne peut pas être vide\");\r\n    }\r\n    if(valueMsgForm.length>1000){\r\n      return seterrMsgCreationMsg(\"le message ne peut pas dépasser 1000 caractères\");\r\n    }\r\n\r\n    const newMessage={};\r\n    newMessage.contenu=valueMsgForm;\r\n\r\n    await axios.post(`/message/creerMessage/${id}`,newMessage,config)\r\n    .then((res)=>console.log(res))\r\n    .catch((err)=>console.log(err));\r\n\r\n    await axios.get(`/message/afficherMesMessages/${id}`,config)\r\n    .then((res)=>{\r\n      setallMsg(res.data);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n\r\n    seterrMsgCreationMsg(\"message Créé.\");\r\n    setvalueMsgForm(\"\");\r\n  }\r\n\r\n\r\n  //affichage des messages au chargement , du post et des signalements de l'user pour les msg du post\r\n  useEffect(() => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    async function messages(){\r\n      await  axios.get(`/message/afficherMesMessages/${id}`,config)\r\n      .then((res)=>{\r\n        setallMsg(res.data);\r\n      })\r\n      .catch((err)=>setmessageServer(err.response.data));\r\n    }\r\n\r\n    async function monPoste(){\r\n      await  axios.get(`/post/monPoste/${id}`,config)\r\n      .then((res)=>setpost(res.data))\r\n      .catch((err)=>console.log(err));\r\n    }\r\n\r\n    async function signalements (){\r\n      await  axios.get(`/signalement/AfficherMessageSignalerParPost/${id}`,config)\r\n      .then((res)=>{\r\n        setlisteSignalementUser(res.data);\r\n      })\r\n      .catch((err)=>console.log(err));\r\n    }\r\n\r\n    async function like (){\r\n      await  axios.get(`/like/AfficherMessageLikerParPost/${id}`,config)\r\n      .then((res)=>{\r\n        console.log(res);\r\n        setlisteLikeUser(res.data);\r\n      })\r\n      .catch((err)=>console.log(err));\r\n    }\r\n\r\n    messages();\r\n    monPoste();\r\n    signalements();\r\n    like();\r\n\r\n  }, [])\r\n\r\n\r\n // permet de savoir au chargement combien de messages on a et d'afficher \"aucun message\" s'il n'y en a pas\r\n  useEffect(() => {\r\n    if(allMsg.length===0){\r\n      return settailleAllMsg(false);\r\n  \r\n    }\r\n    if(allMsg.length>0){\r\n      return settailleAllMsg(true);\r\n    }\r\n\r\n  }, [allMsg])\r\n\r\n  // on compare ici les id message de la liste message avec l'id message des signalements message de l'utilisateur\r\n  // pour voir les messages qu'il a signalé\r\n const messageSignals = (idMsg) =>{\r\n    for(var k=0;k<= listeSignalementUser.length-1;k++){\r\n       if(listeSignalementUser[k].idMessage == idMsg){\r\n         return (\r\n          <div className='signalement'>\r\n            <p>Message signalé</p>\r\n            <img onClick={()=>supSignalementMessage(idMsg)} src={signalerRouge}></img>\r\n          </div>\r\n         )\r\n       }\r\n    }\r\n    return (\r\n      <div className='signalement'>\r\n        <p>Signalé message</p>\r\n        <img onClick={()=>signalerMessage(idMsg)} src={signaler}></img>\r\n      </div>\r\n     )\r\n }\r\n\r\n  \r\n // requete qui permet de signaler un message\r\n const   signalerMessage = async (idMsg) => {\r\n\r\n   const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const signal ={};\r\n    signal.nom=\"oui\";\r\n\r\n    await axios.post(`/signalement/signalementMessage/${idMsg}`,signal,config)\r\n      .then((res)=>{\r\n       \r\n      })\r\n      .catch((err)=>console.log(err));\r\n      \r\n    await  axios.get(`/signalement/AfficherMessageSignalerParPost/${id}`,config)\r\n    .then((res)=>{\r\n      setlisteSignalementUser(res.data);\r\n    })\r\n    .catch((err)=>console.log(err));\r\n  \r\n }\r\n\r\n  // on compare ici les id message de la liste message avec l'id message des  message likés de l'utilisateur\r\n  // pour voir les messages qu'il a liké\r\n  const messageLike = (idMsg,nblike) =>{\r\n    if(listeLikeUser.length === 0){\r\n      return (\r\n        <div className='like'>\r\n          <p>0</p>\r\n          <img onClick={()=>creerLike(idMsg)} src={likeNoir}></img>\r\n        </div>\r\n      )\r\n    }\r\n    for(var k=0;k<= listeLikeUser.length-1;k++){\r\n      if(listeLikeUser[k].idMessage == idMsg){\r\n        return (\r\n          <div className='like'>\r\n            <p>{nblike}</p>\r\n            <img onClick={()=>suppLike(idMsg)} src={likeVert}></img>\r\n          </div>\r\n        )\r\n      }\r\n  }\r\n  return (\r\n      <div className='like'>\r\n        <p>{nblike}</p>\r\n        <img onClick={()=>creerLike(idMsg)} src={likeNoir}></img>\r\n      </div>\r\n    )\r\n\r\n }\r\n\r\n  // requete qui permet de supprimer le  signalement d'un message\r\n const supSignalementMessage = async (idMsg) => {\r\n\r\n  const config = {\r\n     headers: {\r\n       Authorization: `Bearer ${token}`,\r\n     },\r\n   };\r\n\r\n\r\n   await axios.delete(`/signalement/signalementMessage/${idMsg}`,config)\r\n     .then((res)=>{\r\n      \r\n     })\r\n     .catch((err)=>console.log(err));\r\n     \r\n   await  axios.get(`/signalement/AfficherMessageSignalerParPost/${id}`,config)\r\n   .then((res)=>{\r\n     setlisteSignalementUser(res.data);\r\n    \r\n   })\r\n   .catch((err)=>console.log(err));\r\n \r\n}\r\n\r\n//permet de créer un like\r\nconst creerLike = async(idMsg)=>{\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const like= {\r\n    nom:\"oui\",\r\n  };\r\n\r\n  await axios.post(`/like/creerLike/${idMsg}`,like,config)\r\n  .then((res)=>console.log(res))\r\n  .catch((err)=>console.log(err));\r\n  \r\n  await  axios.get(`/like/AfficherMessageLikerParPost/${id}`,config)\r\n      .then((res)=>{\r\n        console.log(res);\r\n        setlisteLikeUser(res.data);\r\n      })\r\n      .catch((err)=>console.log(err));\r\n}\r\n\r\n//permet de supprimer un like\r\nconst suppLike = async (idMsg)=>{\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  await axios.delete(`/like/supprimerLike/${idMsg}`,config)\r\n    .then((res)=>console.log(res))\r\n    .catch((err)=>console.log(err));\r\n\r\n  await  axios.get(`/like/AfficherMessageLikerParPost/${id}`,config)\r\n      .then((res)=>{\r\n        console.log(res);\r\n        setlisteLikeUser(res.data);\r\n      })\r\n      .catch((err)=>console.log(err));\r\n  }\r\n \r\n\r\n  return (\r\n    <div>\r\n        <div className='presentationPost'>\r\n            <p>\r\n                {post.titre}\r\n            </p>\r\n            <p>\r\n                {post.categorie}\r\n            </p>\r\n            <p>\r\n              \r\n            </p>\r\n        </div>\r\n        {tailleAllMsg === false ? <p className='messageServer'>{messageServer}</p> \r\n        : \r\n        allMsg.map((message)=>{\r\n          return (\r\n            <div key={message._id} className='allMsgDuPost'>\r\n              <div className='enteteMsgDuPost'>\r\n                  <p>\r\n                      {message.pseudoCreateurMessage}\r\n                  </p>\r\n                  <p>\r\n                      {message.dateCreation} à {message.heureCreation}\r\n                  </p>\r\n              </div>\r\n              <div className='contenuMsgDuPost'>\r\n                      {message.contenu}\r\n              </div>\r\n              <div className='partieBtnAffichageMsg'>\r\n                  {messageLike(message._id,message.nbLike)}\r\n                  \r\n                  {messageSignals(message._id)}\r\n                  \r\n              </div>\r\n              <div className='finDuMsg'>\r\n           \r\n              </div>\r\n          </div>\r\n          )\r\n        })}\r\n        <div className='creationMsgDuPost'>\r\n            <p>\r\n                message\r\n            </p>\r\n            <p>\r\n                <textarea  value={valueMsgForm} onChange={(e)=>setvalueMsgForm(e.target.value)} className='ecrireMsgDuPost'></textarea>\r\n            </p>\r\n            <p>\r\n                {errMsgCreationMsg}\r\n            </p>\r\n            <button onClick={validerMsgForm} className='validerBtnMsgDuPost'>valider</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}